{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\nvar FlightSearchComponent = /** @class */function () {\n  function FlightSearchComponent() {\n    this.fromLocation = '';\n    this.toLocation = '';\n    this.departureDate = '';\n    this.seats = 1;\n    this.travelClass = 'economy';\n  }\n  FlightSearchComponent.prototype.searchFlights = function () {\n    console.log('Searching for flights...');\n    console.log(\"From: \".concat(this.fromLocation));\n    console.log(\"To: \".concat(this.toLocation));\n    console.log(\"Date: \".concat(this.departureDate));\n    console.log(\"Seats: \".concat(this.seats));\n    console.log(\"Class: \".concat(this.travelClass));\n    // Here, you can implement the logic to trigger the actual search, either by making an API call or navigating to a results page.\n  };\n  FlightSearchComponent = __decorate([Component({\n    selector: 'app-flight-search',\n    templateUrl: './flight-search.component.html',\n    styleUrls: ['./flight-search.component.css']\n  })], FlightSearchComponent);\n  return FlightSearchComponent;\n}();\nexport { FlightSearchComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}