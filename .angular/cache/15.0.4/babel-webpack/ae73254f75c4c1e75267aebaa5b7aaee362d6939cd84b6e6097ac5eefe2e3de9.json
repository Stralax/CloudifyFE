{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nvar RegistrationComponent = /** @class */function () {\n  function RegistrationComponent(router, fb) {\n    this.router = router;\n    this.fb = fb;\n  }\n  RegistrationComponent.prototype.initializeForm = function () {\n    this.registerProfileForm = this.fb.group({\n      username: ['', [Validators.required]],\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required]],\n      newPassword: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required]],\n      gender: [50] //, [Validators.required]],\n    });\n  };\n\n  RegistrationComponent.prototype.onRegisterSubmit = function () {\n    this.doRegister();\n  };\n  RegistrationComponent.prototype.ngOnInit = function () {\n    this.initializeForm();\n  };\n  RegistrationComponent.prototype.doRegister = function () {\n    //   this.injectDetect();\n    //   this.authenticationService\n    //     .register(this.credentials)\n    //     .pipe(\n    //       catchError((error: HttpErrorResponse) => {\n    //         this.showPopup('Registration failed. Please try again. (Try using a different username/email address.)');\n    //         return throwError(() => error);\n    //       })\n    //     )\n    //     .subscribe(() => {\n    //       this.registrationService.sendWelcomeEmail(this.credentials.email).subscribe(() => {\n    //         console.log(\"Welcome email sent\");\n    //       });\n    //       this.router.navigateByUrl(this.historyService.getLastNonLoginUrl());\n    //     });\n  };\n  RegistrationComponent = __decorate([Component({\n    selector: 'app-registration',\n    standalone: true,\n    imports: [CommonModule, FormsModule, RouterLink],\n    templateUrl: './registration.component.html',\n    styleUrls: ['../../../../public/css/registration.css']\n  }), __metadata(\"design:paramtypes\", [Router, FormBuilder])], RegistrationComponent);\n  return RegistrationComponent;\n}();\nexport { RegistrationComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}