{"ast":null,"code":"import { WeatherAndDelayServiceService } from '../../services/weather-and-delay-service.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/weather-and-delay-service.service\";\nvar WeatherAndDelayComponent = /** @class */function () {\n  /*delayProbability: string = null; //`${Math.floor(Math.random() * 100)}%`;\r\n  finalDestination: string = 'Vladivostok';\r\n  finalDestinationDelayProbability: string = `${Math.floor(Math.random() * 100)}%`;\r\n  finalDestinationWeatherForecast: string = this.getRandomWeather();\r\n  finalProbabilityOfDelay: string = `${Math.floor(Math.random() * 100)}%`;\r\n  flightId: string = '54';\r\n  humidity: number = Math.floor(Math.random() * 100);\r\n  originDestination: string = 'Moscow';\r\n  temperature: string = (Math.random() * (30 - (-30)) + (-30)).toFixed(1); // Random temperature between -30 and 30\r\n  visibility: string = (Math.random() * (1 - 0) + 0).toFixed(1); // Random visibility between 0 and 1\r\n  weatherForecast: string = this.getRandomWeather();\r\n  windSpeed: string = (Math.random() * 50).toFixed(1); // Random wind speed between 0 and 50 km/h*/\n  function WeatherAndDelayComponent(weatherAndDelayServiceService) {\n    this.weatherAndDelayServiceService = weatherAndDelayServiceService;\n    // Static properties with random values for now\n    this.weatherDetails = null;\n    this.errorMessage = null;\n    this.delayProbability = null;\n  }\n  // Random weather generator\n  WeatherAndDelayComponent.prototype.getRandomWeather = function () {\n    var weatherOptions = ['Sunny', 'Cloudy', 'Moderate snow', 'Heavy rain', 'Clear sky', 'Thunderstorms'];\n    return weatherOptions[Math.floor(Math.random() * weatherOptions.length)];\n  };\n  WeatherAndDelayComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    var weatherId = \"52\";\n    this.weatherAndDelayServiceService.getWeatherData(weatherId).subscribe({\n      next: function (data) {\n        _this.weatherDetails = data;\n        console.log('Flight data fetched:', data);\n      },\n      error: function (error) {\n        _this.errorMessage = 'Error fetching flight details';\n        console.error('Error:', error);\n      }\n    });\n    this.delayProbability = \"\".concat(Math.floor(Math.random() * 100), \"%\");\n    this.finalDestination = 'Vladivostok';\n    this.finalDestinationDelayProbability = \"\".concat(Math.floor(Math.random() * 100), \"%\");\n    this.finalDestinationWeatherForecast = this.getRandomWeather();\n    this.finalProbabilityOfDelay = \"\".concat(Math.floor(Math.random() * 100), \"%\");\n    this.flightId = '54';\n    this.humidity = Math.floor(Math.random() * 100);\n    this.originDestination = 'Moscow';\n    this.temperature = (Math.random() * (30 - -30) + -30).toFixed(1); // Random temperature between -30 and 30\n    this.visibility = (Math.random() * (1 - 0) + 0).toFixed(1); // Random visibility between 0 and 1\n    this.weatherForecast = this.getRandomWeather();\n    this.windSpeed = (Math.random() * 50).toFixed(1); // Random wind speed between 0 and 50 km/h\n  };\n\n  WeatherAndDelayComponent.ɵfac = function WeatherAndDelayComponent_Factory(t) {\n    return new (t || WeatherAndDelayComponent)(i0.ɵɵdirectiveInject(i1.WeatherAndDelayServiceService));\n  };\n  WeatherAndDelayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WeatherAndDelayComponent,\n    selectors: [[\"app-weather-and-delay\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 53,\n    vars: 12,\n    consts: [[1, \"weather-and-delay-container\"]],\n    template: function WeatherAndDelayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n        i0.ɵɵtext(2, \"Flight Weather and Delay Information\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n        i0.ɵɵtext(5, \"Flight ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\")(8, \"strong\");\n        i0.ɵɵtext(9, \"Origin:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\")(12, \"strong\");\n        i0.ɵɵtext(13, \"Destination:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\")(16, \"strong\");\n        i0.ɵɵtext(17, \"Weather Forecast at Origin:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\")(20, \"strong\");\n        i0.ɵɵtext(21, \"Visibility at Origin:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"p\")(24, \"strong\");\n        i0.ɵɵtext(25, \"Temperature at Origin:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"p\")(28, \"strong\");\n        i0.ɵɵtext(29, \"Humidity at Origin:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"p\")(32, \"strong\");\n        i0.ɵɵtext(33, \"Wind Speed at Origin:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(34);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"h4\");\n        i0.ɵɵtext(36, \"Delay Information\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"p\")(38, \"strong\");\n        i0.ɵɵtext(39, \"Delay Probability:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(40);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"p\")(42, \"strong\");\n        i0.ɵɵtext(43, \"Final Destination Delay Probability:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(44);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"p\")(46, \"strong\");\n        i0.ɵɵtext(47, \"Final Destination Weather Forecast:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(48);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"p\")(50, \"strong\");\n        i0.ɵɵtext(51, \"Final Probability of Delay:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(52);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", ctx.flightId, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.originDestination, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.finalDestination, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.weatherForecast, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.visibility, \" km\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.temperature, \" \\u00B0C\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.humidity, \"%\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.windSpeed, \" km/h\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", ctx.delayProbability, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.finalDestinationDelayProbability, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.finalDestinationWeatherForecast, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.finalProbabilityOfDelay, \"\");\n      }\n    },\n    styles: [\".weather-and-delay-container[_ngcontent-%COMP%]{padding:2rem;border-radius:8px;background-color:#f7f7f7;box-shadow:0 4px 12px #0000001a;font-family:Arial,sans-serif;text-align:left}h3[_ngcontent-%COMP%]{font-size:1.8rem;color:#333;margin-bottom:1rem}h4[_ngcontent-%COMP%]{font-size:1.3rem;color:#007acc;margin-top:1.5rem}p[_ngcontent-%COMP%]{font-size:1rem;margin-bottom:.5rem;color:#555}strong[_ngcontent-%COMP%]{font-weight:700;color:#007acc}\"]\n  });\n  return WeatherAndDelayComponent;\n}();\nexport { WeatherAndDelayComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}